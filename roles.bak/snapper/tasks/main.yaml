- name: Remove the @.snapshots subvolume if it exists
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    if btrfs subvolume list / | grep 'path @.snapshots'; then
      mkdir -p /btrfs_root
      mount /dev/nvme0n1p2 /btrfs_root
      btrfs subvolume delete /btrfs_root/@.snapshots
      umount /btrfs_root
      rm -d /btrfs_root
      exit 0
    else
      exit 31
    fi
  # this is jank, so I'll explain.
  # - to indicate "ok", I exit 31 (why not)
  # - to indicate "changed", I exit 0.
  # anything else is therefore an error
  # I am gambling that nobody else is silly enough to return 31
  register: remove_result
  changed_when: "remove_result.rc != 31"
  failed_when: "remove_result.rc != 31 and remove_result.rc != 0"

- name: Make sure @.snapshots is not in fstab
  become: true
  ansible.posix.mount:
    path: /.snapshots
    fstype: btrfs
    opts: subvol=/@.snapshots
    state: absent

- name: Install snapper
  become: true
  community.general.pacman:
    name: snapper
    state: present

- name: Tell snapper to monitor locations
  become: true
  ansible.builtin.command:
    cmd: 'snapper -c {{ item.name }} create-config {{ item.loc }}'
    creates: '/etc/snapper/configs/{{ item.name }}'
  with_items:
    - { name: 'home', loc: '/home' }
    - { name: 'root', loc: '/' }

- name: Drop actual snapper config files
  become: true
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: /etc/snapper/configs/{{ item }}
    mode: '0640'
  with_items:
    - 'home'
    - 'root'

- name: Enable snapper-timeline systemd timer
  become: true
  ansible.builtin.service:
    name: snapper-timeline.timer
    state: started
    enabled: true

- name: Install snap-pac for snapshots on package changes
  become: true
  community.general.pacman:
    name: snap-pac
    state: present
